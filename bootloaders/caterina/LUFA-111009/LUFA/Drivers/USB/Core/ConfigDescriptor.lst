   1               		.file	"ConfigDescriptor.c"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__tmp_reg__ = 0
   6               	__zero_reg__ = 1
   7               		.text
   8               	.Ltext0:
   9               		.cfi_sections	.debug_frame
  10               		.section	.text.USB_GetNextDescriptor,"ax",@progbits
  12               	USB_GetNextDescriptor:
  13               	.LFB81:
  14               		.file 1 "LUFA-111009/LUFA/Drivers/USB/Core/ConfigDescriptor.h"
   1:LUFA-111009/LUFA/Drivers/USB/Core/ConfigDescriptor.h **** /*
   2:LUFA-111009/LUFA/Drivers/USB/Core/ConfigDescriptor.h ****              LUFA Library
   3:LUFA-111009/LUFA/Drivers/USB/Core/ConfigDescriptor.h ****      Copyright (C) Dean Camera, 2011.
   4:LUFA-111009/LUFA/Drivers/USB/Core/ConfigDescriptor.h **** 
   5:LUFA-111009/LUFA/Drivers/USB/Core/ConfigDescriptor.h ****   dean [at] fourwalledcubicle [dot] com
   6:LUFA-111009/LUFA/Drivers/USB/Core/ConfigDescriptor.h ****            www.lufa-lib.org
   7:LUFA-111009/LUFA/Drivers/USB/Core/ConfigDescriptor.h **** */
   8:LUFA-111009/LUFA/Drivers/USB/Core/ConfigDescriptor.h **** 
   9:LUFA-111009/LUFA/Drivers/USB/Core/ConfigDescriptor.h **** /*
  10:LUFA-111009/LUFA/Drivers/USB/Core/ConfigDescriptor.h ****   Copyright 2011  Dean Camera (dean [at] fourwalledcubicle [dot] com)
  11:LUFA-111009/LUFA/Drivers/USB/Core/ConfigDescriptor.h **** 
  12:LUFA-111009/LUFA/Drivers/USB/Core/ConfigDescriptor.h ****   Permission to use, copy, modify, distribute, and sell this
  13:LUFA-111009/LUFA/Drivers/USB/Core/ConfigDescriptor.h ****   software and its documentation for any purpose is hereby granted
  14:LUFA-111009/LUFA/Drivers/USB/Core/ConfigDescriptor.h ****   without fee, provided that the above copyright notice appear in
  15:LUFA-111009/LUFA/Drivers/USB/Core/ConfigDescriptor.h ****   all copies and that both that the copyright notice and this
  16:LUFA-111009/LUFA/Drivers/USB/Core/ConfigDescriptor.h ****   permission notice and warranty disclaimer appear in supporting
  17:LUFA-111009/LUFA/Drivers/USB/Core/ConfigDescriptor.h ****   documentation, and that the name of the author not be used in
  18:LUFA-111009/LUFA/Drivers/USB/Core/ConfigDescriptor.h ****   advertising or publicity pertaining to distribution of the
  19:LUFA-111009/LUFA/Drivers/USB/Core/ConfigDescriptor.h ****   software without specific, written prior permission.
  20:LUFA-111009/LUFA/Drivers/USB/Core/ConfigDescriptor.h **** 
  21:LUFA-111009/LUFA/Drivers/USB/Core/ConfigDescriptor.h ****   The author disclaim all warranties with regard to this
  22:LUFA-111009/LUFA/Drivers/USB/Core/ConfigDescriptor.h ****   software, including all implied warranties of merchantability
  23:LUFA-111009/LUFA/Drivers/USB/Core/ConfigDescriptor.h ****   and fitness.  In no event shall the author be liable for any
  24:LUFA-111009/LUFA/Drivers/USB/Core/ConfigDescriptor.h ****   special, indirect or consequential damages or any damages
  25:LUFA-111009/LUFA/Drivers/USB/Core/ConfigDescriptor.h ****   whatsoever resulting from loss of use, data or profits, whether
  26:LUFA-111009/LUFA/Drivers/USB/Core/ConfigDescriptor.h ****   in an action of contract, negligence or other tortious action,
  27:LUFA-111009/LUFA/Drivers/USB/Core/ConfigDescriptor.h ****   arising out of or in connection with the use or performance of
  28:LUFA-111009/LUFA/Drivers/USB/Core/ConfigDescriptor.h ****   this software.
  29:LUFA-111009/LUFA/Drivers/USB/Core/ConfigDescriptor.h **** */
  30:LUFA-111009/LUFA/Drivers/USB/Core/ConfigDescriptor.h **** 
  31:LUFA-111009/LUFA/Drivers/USB/Core/ConfigDescriptor.h **** /** \file
  32:LUFA-111009/LUFA/Drivers/USB/Core/ConfigDescriptor.h ****  *  \brief USB Configuration Descriptor definitions.
  33:LUFA-111009/LUFA/Drivers/USB/Core/ConfigDescriptor.h ****  *  \copydetails Group_ConfigDescriptorParser
  34:LUFA-111009/LUFA/Drivers/USB/Core/ConfigDescriptor.h ****  *
  35:LUFA-111009/LUFA/Drivers/USB/Core/ConfigDescriptor.h ****  *  \note This file should not be included directly. It is automatically included as needed by the 
  36:LUFA-111009/LUFA/Drivers/USB/Core/ConfigDescriptor.h ****  *        dispatch header located in LUFA/Drivers/USB/USB.h.
  37:LUFA-111009/LUFA/Drivers/USB/Core/ConfigDescriptor.h ****  */
  38:LUFA-111009/LUFA/Drivers/USB/Core/ConfigDescriptor.h **** 
  39:LUFA-111009/LUFA/Drivers/USB/Core/ConfigDescriptor.h **** /** \ingroup Group_Descriptors
  40:LUFA-111009/LUFA/Drivers/USB/Core/ConfigDescriptor.h ****  *  \defgroup Group_ConfigDescriptorParser Configuration Descriptor Parser
  41:LUFA-111009/LUFA/Drivers/USB/Core/ConfigDescriptor.h ****  *  \brief USB Configuration Descriptor definitions.
  42:LUFA-111009/LUFA/Drivers/USB/Core/ConfigDescriptor.h ****  *
  43:LUFA-111009/LUFA/Drivers/USB/Core/ConfigDescriptor.h ****  *  This section of the library gives a friendly API which can be used in host applications to easi
  44:LUFA-111009/LUFA/Drivers/USB/Core/ConfigDescriptor.h ****  *  parse an attached device's configuration descriptor so that endpoint, interface and other descr
  45:LUFA-111009/LUFA/Drivers/USB/Core/ConfigDescriptor.h ****  *  data can be extracted and used as needed.
  46:LUFA-111009/LUFA/Drivers/USB/Core/ConfigDescriptor.h ****  *
  47:LUFA-111009/LUFA/Drivers/USB/Core/ConfigDescriptor.h ****  *  @{
  48:LUFA-111009/LUFA/Drivers/USB/Core/ConfigDescriptor.h ****  */
  49:LUFA-111009/LUFA/Drivers/USB/Core/ConfigDescriptor.h **** 
  50:LUFA-111009/LUFA/Drivers/USB/Core/ConfigDescriptor.h **** #ifndef __CONFIGDESCRIPTOR_H__
  51:LUFA-111009/LUFA/Drivers/USB/Core/ConfigDescriptor.h **** #define __CONFIGDESCRIPTOR_H__
  52:LUFA-111009/LUFA/Drivers/USB/Core/ConfigDescriptor.h **** 
  53:LUFA-111009/LUFA/Drivers/USB/Core/ConfigDescriptor.h **** 	/* Includes: */
  54:LUFA-111009/LUFA/Drivers/USB/Core/ConfigDescriptor.h **** 		#include "../../../Common/Common.h"
  55:LUFA-111009/LUFA/Drivers/USB/Core/ConfigDescriptor.h **** 		#include "USBMode.h"		
  56:LUFA-111009/LUFA/Drivers/USB/Core/ConfigDescriptor.h **** 		#include "HostStandardReq.h"
  57:LUFA-111009/LUFA/Drivers/USB/Core/ConfigDescriptor.h **** 		#include "StdDescriptors.h"
  58:LUFA-111009/LUFA/Drivers/USB/Core/ConfigDescriptor.h **** 
  59:LUFA-111009/LUFA/Drivers/USB/Core/ConfigDescriptor.h **** 	/* Enable C linkage for C++ Compilers: */
  60:LUFA-111009/LUFA/Drivers/USB/Core/ConfigDescriptor.h **** 		#if defined(__cplusplus)
  61:LUFA-111009/LUFA/Drivers/USB/Core/ConfigDescriptor.h **** 			extern "C" {
  62:LUFA-111009/LUFA/Drivers/USB/Core/ConfigDescriptor.h **** 		#endif
  63:LUFA-111009/LUFA/Drivers/USB/Core/ConfigDescriptor.h **** 
  64:LUFA-111009/LUFA/Drivers/USB/Core/ConfigDescriptor.h **** 	/* Preprocessor Checks: */
  65:LUFA-111009/LUFA/Drivers/USB/Core/ConfigDescriptor.h **** 		#if !defined(__INCLUDE_FROM_USB_DRIVER)
  66:LUFA-111009/LUFA/Drivers/USB/Core/ConfigDescriptor.h **** 			#error Do not include this file directly. Include LUFA/Drivers/USB/USB.h instead.
  67:LUFA-111009/LUFA/Drivers/USB/Core/ConfigDescriptor.h **** 		#endif
  68:LUFA-111009/LUFA/Drivers/USB/Core/ConfigDescriptor.h **** 
  69:LUFA-111009/LUFA/Drivers/USB/Core/ConfigDescriptor.h **** 	/* Public Interface - May be used in end-application: */
  70:LUFA-111009/LUFA/Drivers/USB/Core/ConfigDescriptor.h **** 		/* Macros: */
  71:LUFA-111009/LUFA/Drivers/USB/Core/ConfigDescriptor.h **** 			/** Casts a pointer to a descriptor inside the configuration descriptor into a pointer to the gi
  72:LUFA-111009/LUFA/Drivers/USB/Core/ConfigDescriptor.h **** 			 *  descriptor type.
  73:LUFA-111009/LUFA/Drivers/USB/Core/ConfigDescriptor.h **** 			 *
  74:LUFA-111009/LUFA/Drivers/USB/Core/ConfigDescriptor.h **** 			 *  Usage Example:
  75:LUFA-111009/LUFA/Drivers/USB/Core/ConfigDescriptor.h **** 			 *  \code
  76:LUFA-111009/LUFA/Drivers/USB/Core/ConfigDescriptor.h **** 			 *  uint8_t* CurrDescriptor = &ConfigDescriptor[0]; // Pointing to the configuration header
  77:LUFA-111009/LUFA/Drivers/USB/Core/ConfigDescriptor.h **** 			 *  USB_Descriptor_Configuration_Header_t* ConfigHeaderPtr = DESCRIPTOR_PCAST(CurrDescriptor,
  78:LUFA-111009/LUFA/Drivers/USB/Core/ConfigDescriptor.h **** 			 *                                                           USB_Descriptor_Configuration_Header
  79:LUFA-111009/LUFA/Drivers/USB/Core/ConfigDescriptor.h **** 			 *
  80:LUFA-111009/LUFA/Drivers/USB/Core/ConfigDescriptor.h **** 			 *  // Can now access elements of the configuration header struct using the -> indirection opera
  81:LUFA-111009/LUFA/Drivers/USB/Core/ConfigDescriptor.h **** 			 *  \endcode
  82:LUFA-111009/LUFA/Drivers/USB/Core/ConfigDescriptor.h **** 			 */
  83:LUFA-111009/LUFA/Drivers/USB/Core/ConfigDescriptor.h **** 			#define DESCRIPTOR_PCAST(DescriptorPtr, Type) ((Type*)(DescriptorPtr))
  84:LUFA-111009/LUFA/Drivers/USB/Core/ConfigDescriptor.h **** 
  85:LUFA-111009/LUFA/Drivers/USB/Core/ConfigDescriptor.h **** 			/** Casts a pointer to a descriptor inside the configuration descriptor into the given descripto
  86:LUFA-111009/LUFA/Drivers/USB/Core/ConfigDescriptor.h **** 			 *  type (as an actual struct instance rather than a pointer to a struct).
  87:LUFA-111009/LUFA/Drivers/USB/Core/ConfigDescriptor.h **** 			 *
  88:LUFA-111009/LUFA/Drivers/USB/Core/ConfigDescriptor.h **** 			 *  Usage Example:
  89:LUFA-111009/LUFA/Drivers/USB/Core/ConfigDescriptor.h **** 			 *  \code
  90:LUFA-111009/LUFA/Drivers/USB/Core/ConfigDescriptor.h **** 			 *  uint8_t* CurrDescriptor = &ConfigDescriptor[0]; // Pointing to the configuration header
  91:LUFA-111009/LUFA/Drivers/USB/Core/ConfigDescriptor.h **** 			 *  USB_Descriptor_Configuration_Header_t ConfigHeader = DESCRIPTOR_CAST(CurrDescriptor,
  92:LUFA-111009/LUFA/Drivers/USB/Core/ConfigDescriptor.h **** 			 *                                                       USB_Descriptor_Configuration_Header_t);
  93:LUFA-111009/LUFA/Drivers/USB/Core/ConfigDescriptor.h **** 			 *
  94:LUFA-111009/LUFA/Drivers/USB/Core/ConfigDescriptor.h **** 			 *  // Can now access elements of the configuration header struct using the . operator
  95:LUFA-111009/LUFA/Drivers/USB/Core/ConfigDescriptor.h **** 			 *  \endcode
  96:LUFA-111009/LUFA/Drivers/USB/Core/ConfigDescriptor.h **** 			 */
  97:LUFA-111009/LUFA/Drivers/USB/Core/ConfigDescriptor.h **** 			#define DESCRIPTOR_CAST(DescriptorPtr, Type)  (*DESCRIPTOR_PCAST(DescriptorPtr, Type))
  98:LUFA-111009/LUFA/Drivers/USB/Core/ConfigDescriptor.h **** 
  99:LUFA-111009/LUFA/Drivers/USB/Core/ConfigDescriptor.h **** 			/** Returns the descriptor's type, expressed as the 8-bit type value in the header of the descri
 100:LUFA-111009/LUFA/Drivers/USB/Core/ConfigDescriptor.h **** 			 *  This value's meaning depends on the descriptor's placement in the descriptor, but standard t
 101:LUFA-111009/LUFA/Drivers/USB/Core/ConfigDescriptor.h **** 			 *  values can be accessed in the \ref USB_DescriptorTypes_t enum.
 102:LUFA-111009/LUFA/Drivers/USB/Core/ConfigDescriptor.h **** 			 */
 103:LUFA-111009/LUFA/Drivers/USB/Core/ConfigDescriptor.h **** 			#define DESCRIPTOR_TYPE(DescriptorPtr)    DESCRIPTOR_PCAST(DescriptorPtr, USB_Descriptor_Header_
 104:LUFA-111009/LUFA/Drivers/USB/Core/ConfigDescriptor.h **** 
 105:LUFA-111009/LUFA/Drivers/USB/Core/ConfigDescriptor.h **** 			/** Returns the descriptor's size, expressed as the 8-bit value indicating the number of bytes. 
 106:LUFA-111009/LUFA/Drivers/USB/Core/ConfigDescriptor.h **** 			#define DESCRIPTOR_SIZE(DescriptorPtr)    DESCRIPTOR_PCAST(DescriptorPtr, USB_Descriptor_Header_
 107:LUFA-111009/LUFA/Drivers/USB/Core/ConfigDescriptor.h **** 
 108:LUFA-111009/LUFA/Drivers/USB/Core/ConfigDescriptor.h **** 		/* Type Defines: */
 109:LUFA-111009/LUFA/Drivers/USB/Core/ConfigDescriptor.h **** 			/** Type define for a Configuration Descriptor comparator function (function taking a pointer to
 110:LUFA-111009/LUFA/Drivers/USB/Core/ConfigDescriptor.h **** 			 *  of type void, returning a uint8_t value).
 111:LUFA-111009/LUFA/Drivers/USB/Core/ConfigDescriptor.h **** 			 *
 112:LUFA-111009/LUFA/Drivers/USB/Core/ConfigDescriptor.h **** 			 *  \see \ref USB_GetNextDescriptorComp function for more details.
 113:LUFA-111009/LUFA/Drivers/USB/Core/ConfigDescriptor.h **** 			 */
 114:LUFA-111009/LUFA/Drivers/USB/Core/ConfigDescriptor.h **** 			typedef uint8_t (* ConfigComparatorPtr_t)(void*);
 115:LUFA-111009/LUFA/Drivers/USB/Core/ConfigDescriptor.h **** 
 116:LUFA-111009/LUFA/Drivers/USB/Core/ConfigDescriptor.h **** 		/* Enums: */
 117:LUFA-111009/LUFA/Drivers/USB/Core/ConfigDescriptor.h **** 			/** Enum for the possible return codes of the \ref USB_Host_GetDeviceConfigDescriptor() function
 118:LUFA-111009/LUFA/Drivers/USB/Core/ConfigDescriptor.h **** 			enum USB_Host_GetConfigDescriptor_ErrorCodes_t
 119:LUFA-111009/LUFA/Drivers/USB/Core/ConfigDescriptor.h **** 			{
 120:LUFA-111009/LUFA/Drivers/USB/Core/ConfigDescriptor.h **** 				HOST_GETCONFIG_Successful       = 0, /**< No error occurred while retrieving the configuration 
 121:LUFA-111009/LUFA/Drivers/USB/Core/ConfigDescriptor.h **** 				HOST_GETCONFIG_DeviceDisconnect = 1, /**< The attached device was disconnected while retrieving
 122:LUFA-111009/LUFA/Drivers/USB/Core/ConfigDescriptor.h **** 				                                        * descriptor.
 123:LUFA-111009/LUFA/Drivers/USB/Core/ConfigDescriptor.h **** 				                                        */
 124:LUFA-111009/LUFA/Drivers/USB/Core/ConfigDescriptor.h **** 				HOST_GETCONFIG_PipeError        = 2, /**< An error occurred in the pipe while sending the reque
 125:LUFA-111009/LUFA/Drivers/USB/Core/ConfigDescriptor.h **** 				HOST_GETCONFIG_SetupStalled     = 3, /**< The attached device stalled the request to retrieve t
 126:LUFA-111009/LUFA/Drivers/USB/Core/ConfigDescriptor.h **** 				                                        * descriptor.
 127:LUFA-111009/LUFA/Drivers/USB/Core/ConfigDescriptor.h **** 				                                        */
 128:LUFA-111009/LUFA/Drivers/USB/Core/ConfigDescriptor.h **** 				HOST_GETCONFIG_SoftwareTimeOut  = 4, /**< The request or data transfer timed out. */
 129:LUFA-111009/LUFA/Drivers/USB/Core/ConfigDescriptor.h **** 				HOST_GETCONFIG_BuffOverflow     = 5, /**< The device's configuration descriptor is too large to
 130:LUFA-111009/LUFA/Drivers/USB/Core/ConfigDescriptor.h **** 				                                        * buffer.
 131:LUFA-111009/LUFA/Drivers/USB/Core/ConfigDescriptor.h **** 				                                        */
 132:LUFA-111009/LUFA/Drivers/USB/Core/ConfigDescriptor.h **** 				HOST_GETCONFIG_InvalidData      = 6, /**< The device returned invalid configuration descriptor 
 133:LUFA-111009/LUFA/Drivers/USB/Core/ConfigDescriptor.h **** 			};
 134:LUFA-111009/LUFA/Drivers/USB/Core/ConfigDescriptor.h **** 
 135:LUFA-111009/LUFA/Drivers/USB/Core/ConfigDescriptor.h **** 			/** Enum for return values of a descriptor comparator function. */
 136:LUFA-111009/LUFA/Drivers/USB/Core/ConfigDescriptor.h **** 			enum DSearch_Return_ErrorCodes_t
 137:LUFA-111009/LUFA/Drivers/USB/Core/ConfigDescriptor.h **** 			{
 138:LUFA-111009/LUFA/Drivers/USB/Core/ConfigDescriptor.h **** 				DESCRIPTOR_SEARCH_Found                = 0, /**< Current descriptor matches comparator criteria
 139:LUFA-111009/LUFA/Drivers/USB/Core/ConfigDescriptor.h **** 				DESCRIPTOR_SEARCH_Fail                 = 1, /**< No further descriptor could possibly match cri
 140:LUFA-111009/LUFA/Drivers/USB/Core/ConfigDescriptor.h **** 				DESCRIPTOR_SEARCH_NotFound             = 2, /**< Current descriptor does not match comparator c
 141:LUFA-111009/LUFA/Drivers/USB/Core/ConfigDescriptor.h **** 			};
 142:LUFA-111009/LUFA/Drivers/USB/Core/ConfigDescriptor.h **** 
 143:LUFA-111009/LUFA/Drivers/USB/Core/ConfigDescriptor.h **** 			/** Enum for return values of \ref USB_GetNextDescriptorComp(). */
 144:LUFA-111009/LUFA/Drivers/USB/Core/ConfigDescriptor.h **** 			enum DSearch_Comp_Return_ErrorCodes_t
 145:LUFA-111009/LUFA/Drivers/USB/Core/ConfigDescriptor.h **** 			{
 146:LUFA-111009/LUFA/Drivers/USB/Core/ConfigDescriptor.h **** 				DESCRIPTOR_SEARCH_COMP_Found           = 0, /**< Configuration descriptor now points to descrip
 147:LUFA-111009/LUFA/Drivers/USB/Core/ConfigDescriptor.h **** 				                                             *   search criteria of the given comparator functi
 148:LUFA-111009/LUFA/Drivers/USB/Core/ConfigDescriptor.h **** 				DESCRIPTOR_SEARCH_COMP_Fail            = 1, /**< Comparator function returned \ref DESCRIPTOR_S
 149:LUFA-111009/LUFA/Drivers/USB/Core/ConfigDescriptor.h **** 				DESCRIPTOR_SEARCH_COMP_EndOfDescriptor = 2, /**< End of configuration descriptor reached before
 150:LUFA-111009/LUFA/Drivers/USB/Core/ConfigDescriptor.h **** 			};
 151:LUFA-111009/LUFA/Drivers/USB/Core/ConfigDescriptor.h **** 
 152:LUFA-111009/LUFA/Drivers/USB/Core/ConfigDescriptor.h **** 		/* Function Prototypes: */
 153:LUFA-111009/LUFA/Drivers/USB/Core/ConfigDescriptor.h **** 			/** Retrieves the configuration descriptor data from an attached device via a standard request i
 154:LUFA-111009/LUFA/Drivers/USB/Core/ConfigDescriptor.h **** 			 *  including validity and size checking to prevent a buffer overflow.
 155:LUFA-111009/LUFA/Drivers/USB/Core/ConfigDescriptor.h **** 			 *
 156:LUFA-111009/LUFA/Drivers/USB/Core/ConfigDescriptor.h **** 			 *  \param[in]     ConfigNumber   Device configuration descriptor number to fetch from the devic
 157:LUFA-111009/LUFA/Drivers/USB/Core/ConfigDescriptor.h **** 			 *                                single configuration devices).
 158:LUFA-111009/LUFA/Drivers/USB/Core/ConfigDescriptor.h **** 			 *  \param[in,out] ConfigSizePtr  Pointer to a location for storing the retrieved configuration 
 159:LUFA-111009/LUFA/Drivers/USB/Core/ConfigDescriptor.h **** 			 *  \param[out]    BufferPtr      Pointer to the buffer for storing the configuration descriptor
 160:LUFA-111009/LUFA/Drivers/USB/Core/ConfigDescriptor.h **** 			 *  \param[out]    BufferSize     Size of the allocated buffer where the configuration descripto
 161:LUFA-111009/LUFA/Drivers/USB/Core/ConfigDescriptor.h **** 			 *
 162:LUFA-111009/LUFA/Drivers/USB/Core/ConfigDescriptor.h **** 			 *  \return A value from the \ref USB_Host_GetConfigDescriptor_ErrorCodes_t enum.
 163:LUFA-111009/LUFA/Drivers/USB/Core/ConfigDescriptor.h **** 			 */
 164:LUFA-111009/LUFA/Drivers/USB/Core/ConfigDescriptor.h **** 			uint8_t USB_Host_GetDeviceConfigDescriptor(const uint8_t ConfigNumber,
 165:LUFA-111009/LUFA/Drivers/USB/Core/ConfigDescriptor.h **** 			                                           uint16_t* const ConfigSizePtr,
 166:LUFA-111009/LUFA/Drivers/USB/Core/ConfigDescriptor.h **** 			                                           void* const BufferPtr,
 167:LUFA-111009/LUFA/Drivers/USB/Core/ConfigDescriptor.h **** 			                                           const uint16_t BufferSize) ATTR_NON_NULL_PTR_ARG(2) A
 168:LUFA-111009/LUFA/Drivers/USB/Core/ConfigDescriptor.h **** 
 169:LUFA-111009/LUFA/Drivers/USB/Core/ConfigDescriptor.h **** 			/** Skips to the next sub-descriptor inside the configuration descriptor of the specified type v
 170:LUFA-111009/LUFA/Drivers/USB/Core/ConfigDescriptor.h **** 			 *  The bytes remaining value is automatically decremented.
 171:LUFA-111009/LUFA/Drivers/USB/Core/ConfigDescriptor.h **** 			 *
 172:LUFA-111009/LUFA/Drivers/USB/Core/ConfigDescriptor.h **** 			 * \param[in,out] BytesRem       Pointer to the number of bytes remaining of the configuration d
 173:LUFA-111009/LUFA/Drivers/USB/Core/ConfigDescriptor.h **** 			 * \param[in,out] CurrConfigLoc  Pointer to the current descriptor inside the configuration desc
 174:LUFA-111009/LUFA/Drivers/USB/Core/ConfigDescriptor.h **** 			 * \param[in]     Type           Descriptor type value to search for.
 175:LUFA-111009/LUFA/Drivers/USB/Core/ConfigDescriptor.h **** 			 */
 176:LUFA-111009/LUFA/Drivers/USB/Core/ConfigDescriptor.h **** 			void USB_GetNextDescriptorOfType(uint16_t* const BytesRem,
 177:LUFA-111009/LUFA/Drivers/USB/Core/ConfigDescriptor.h **** 			                                 void** const CurrConfigLoc,
 178:LUFA-111009/LUFA/Drivers/USB/Core/ConfigDescriptor.h **** 			                                 const uint8_t Type)
 179:LUFA-111009/LUFA/Drivers/USB/Core/ConfigDescriptor.h **** 			                                 ATTR_NON_NULL_PTR_ARG(1) ATTR_NON_NULL_PTR_ARG(2);
 180:LUFA-111009/LUFA/Drivers/USB/Core/ConfigDescriptor.h **** 
 181:LUFA-111009/LUFA/Drivers/USB/Core/ConfigDescriptor.h **** 			/** Skips to the next sub-descriptor inside the configuration descriptor of the specified type v
 182:LUFA-111009/LUFA/Drivers/USB/Core/ConfigDescriptor.h **** 			 *  which must come before a descriptor of the second given type value. If the BeforeType type
 183:LUFA-111009/LUFA/Drivers/USB/Core/ConfigDescriptor.h **** 			 *  descriptor is reached first, the number of bytes remaining to process is set to zero and the
 184:LUFA-111009/LUFA/Drivers/USB/Core/ConfigDescriptor.h **** 			 *  function exits. The bytes remaining value is automatically decremented.
 185:LUFA-111009/LUFA/Drivers/USB/Core/ConfigDescriptor.h **** 			 *
 186:LUFA-111009/LUFA/Drivers/USB/Core/ConfigDescriptor.h **** 			 * \param[in,out] BytesRem       Pointer to the number of bytes remaining of the configuration d
 187:LUFA-111009/LUFA/Drivers/USB/Core/ConfigDescriptor.h **** 			 * \param[in,out] CurrConfigLoc  Pointer to the current descriptor inside the configuration desc
 188:LUFA-111009/LUFA/Drivers/USB/Core/ConfigDescriptor.h **** 			 * \param[in]     Type           Descriptor type value to search for.
 189:LUFA-111009/LUFA/Drivers/USB/Core/ConfigDescriptor.h **** 			 * \param[in]     BeforeType     Descriptor type value which must not be reached before the give
 190:LUFA-111009/LUFA/Drivers/USB/Core/ConfigDescriptor.h **** 			 */
 191:LUFA-111009/LUFA/Drivers/USB/Core/ConfigDescriptor.h **** 			void USB_GetNextDescriptorOfTypeBefore(uint16_t* const BytesRem,
 192:LUFA-111009/LUFA/Drivers/USB/Core/ConfigDescriptor.h **** 			                                       void** const CurrConfigLoc,
 193:LUFA-111009/LUFA/Drivers/USB/Core/ConfigDescriptor.h **** 			                                       const uint8_t Type,
 194:LUFA-111009/LUFA/Drivers/USB/Core/ConfigDescriptor.h **** 			                                       const uint8_t BeforeType)
 195:LUFA-111009/LUFA/Drivers/USB/Core/ConfigDescriptor.h **** 			                                       ATTR_NON_NULL_PTR_ARG(1) ATTR_NON_NULL_PTR_ARG(2);
 196:LUFA-111009/LUFA/Drivers/USB/Core/ConfigDescriptor.h **** 
 197:LUFA-111009/LUFA/Drivers/USB/Core/ConfigDescriptor.h **** 			/** Skips to the next sub-descriptor inside the configuration descriptor of the specified type v
 198:LUFA-111009/LUFA/Drivers/USB/Core/ConfigDescriptor.h **** 			 *  which must come after a descriptor of the second given type value. The bytes remaining value
 199:LUFA-111009/LUFA/Drivers/USB/Core/ConfigDescriptor.h **** 			 *  automatically decremented.
 200:LUFA-111009/LUFA/Drivers/USB/Core/ConfigDescriptor.h **** 			 *
 201:LUFA-111009/LUFA/Drivers/USB/Core/ConfigDescriptor.h **** 			 * \param[in,out] BytesRem       Pointer to the number of bytes remaining of the configuration d
 202:LUFA-111009/LUFA/Drivers/USB/Core/ConfigDescriptor.h **** 			 * \param[in,out] CurrConfigLoc  Pointer to the current descriptor inside the configuration desc
 203:LUFA-111009/LUFA/Drivers/USB/Core/ConfigDescriptor.h **** 			 * \param[in]     Type           Descriptor type value to search for.
 204:LUFA-111009/LUFA/Drivers/USB/Core/ConfigDescriptor.h **** 			 * \param[in]     AfterType      Descriptor type value which must be reached before the given Ty
 205:LUFA-111009/LUFA/Drivers/USB/Core/ConfigDescriptor.h **** 			 */
 206:LUFA-111009/LUFA/Drivers/USB/Core/ConfigDescriptor.h **** 			void USB_GetNextDescriptorOfTypeAfter(uint16_t* const BytesRem,
 207:LUFA-111009/LUFA/Drivers/USB/Core/ConfigDescriptor.h **** 			                                      void** const CurrConfigLoc,
 208:LUFA-111009/LUFA/Drivers/USB/Core/ConfigDescriptor.h **** 			                                      const uint8_t Type,
 209:LUFA-111009/LUFA/Drivers/USB/Core/ConfigDescriptor.h **** 			                                      const uint8_t AfterType)
 210:LUFA-111009/LUFA/Drivers/USB/Core/ConfigDescriptor.h **** 			                                      ATTR_NON_NULL_PTR_ARG(1) ATTR_NON_NULL_PTR_ARG(2);
 211:LUFA-111009/LUFA/Drivers/USB/Core/ConfigDescriptor.h **** 
 212:LUFA-111009/LUFA/Drivers/USB/Core/ConfigDescriptor.h **** 			/** Searches for the next descriptor in the given configuration descriptor using a pre-made comp
 213:LUFA-111009/LUFA/Drivers/USB/Core/ConfigDescriptor.h **** 			 *  function. The routine updates the position and remaining configuration descriptor bytes valu
 214:LUFA-111009/LUFA/Drivers/USB/Core/ConfigDescriptor.h **** 			 *  automatically. If a comparator routine fails a search, the descriptor pointer is retreated b
 215:LUFA-111009/LUFA/Drivers/USB/Core/ConfigDescriptor.h **** 			 *  so that the next descriptor search invocation will start from the descriptor which first cau
 216:LUFA-111009/LUFA/Drivers/USB/Core/ConfigDescriptor.h **** 			 *  original search to fail. This behaviour allows for one comparator to be used immediately aft
 217:LUFA-111009/LUFA/Drivers/USB/Core/ConfigDescriptor.h **** 			 *  has failed, starting the second search from the descriptor which failed the first.
 218:LUFA-111009/LUFA/Drivers/USB/Core/ConfigDescriptor.h **** 			 *
 219:LUFA-111009/LUFA/Drivers/USB/Core/ConfigDescriptor.h **** 			 *  Comparator functions should be standard functions which accept a pointer to the header of th
 220:LUFA-111009/LUFA/Drivers/USB/Core/ConfigDescriptor.h **** 			 *  descriptor inside the configuration descriptor which is being compared, and should return a 
 221:LUFA-111009/LUFA/Drivers/USB/Core/ConfigDescriptor.h **** 			 *  the \ref DSearch_Return_ErrorCodes_t enum as a uint8_t value.
 222:LUFA-111009/LUFA/Drivers/USB/Core/ConfigDescriptor.h **** 			 *
 223:LUFA-111009/LUFA/Drivers/USB/Core/ConfigDescriptor.h **** 			 *  \note This function is available in USB Host mode only.
 224:LUFA-111009/LUFA/Drivers/USB/Core/ConfigDescriptor.h **** 			 *
 225:LUFA-111009/LUFA/Drivers/USB/Core/ConfigDescriptor.h **** 			 *  \param[in,out] BytesRem           Pointer to an int storing the remaining bytes in the confi
 226:LUFA-111009/LUFA/Drivers/USB/Core/ConfigDescriptor.h **** 			 *  \param[in,out] CurrConfigLoc      Pointer to the current position in the configuration descr
 227:LUFA-111009/LUFA/Drivers/USB/Core/ConfigDescriptor.h **** 			 *  \param[in]     ComparatorRoutine  Name of the comparator search function to use on the confi
 228:LUFA-111009/LUFA/Drivers/USB/Core/ConfigDescriptor.h **** 			 *
 229:LUFA-111009/LUFA/Drivers/USB/Core/ConfigDescriptor.h **** 			 *  \return Value of one of the members of the \ref DSearch_Comp_Return_ErrorCodes_t enum.
 230:LUFA-111009/LUFA/Drivers/USB/Core/ConfigDescriptor.h **** 			 *
 231:LUFA-111009/LUFA/Drivers/USB/Core/ConfigDescriptor.h **** 			 *  Usage Example:
 232:LUFA-111009/LUFA/Drivers/USB/Core/ConfigDescriptor.h **** 			 *  \code
 233:LUFA-111009/LUFA/Drivers/USB/Core/ConfigDescriptor.h **** 			 *  uint8_t EndpointSearcher(void* CurrentDescriptor); // Comparator Prototype
 234:LUFA-111009/LUFA/Drivers/USB/Core/ConfigDescriptor.h **** 			 *
 235:LUFA-111009/LUFA/Drivers/USB/Core/ConfigDescriptor.h **** 			 *  uint8_t EndpointSearcher(void* CurrentDescriptor)
 236:LUFA-111009/LUFA/Drivers/USB/Core/ConfigDescriptor.h **** 			 *  {
 237:LUFA-111009/LUFA/Drivers/USB/Core/ConfigDescriptor.h **** 			 *     if (DESCRIPTOR_TYPE(CurrentDescriptor) == DTYPE_Endpoint)
 238:LUFA-111009/LUFA/Drivers/USB/Core/ConfigDescriptor.h **** 			 *         return DESCRIPTOR_SEARCH_Found;
 239:LUFA-111009/LUFA/Drivers/USB/Core/ConfigDescriptor.h **** 			 *     else
 240:LUFA-111009/LUFA/Drivers/USB/Core/ConfigDescriptor.h **** 			 *         return DESCRIPTOR_SEARCH_NotFound;
 241:LUFA-111009/LUFA/Drivers/USB/Core/ConfigDescriptor.h **** 			 *  }
 242:LUFA-111009/LUFA/Drivers/USB/Core/ConfigDescriptor.h **** 			 *
 243:LUFA-111009/LUFA/Drivers/USB/Core/ConfigDescriptor.h **** 			 *  //...
 244:LUFA-111009/LUFA/Drivers/USB/Core/ConfigDescriptor.h **** 			 *  // After retrieving configuration descriptor:
 245:LUFA-111009/LUFA/Drivers/USB/Core/ConfigDescriptor.h **** 			 *  if (USB_Host_GetNextDescriptorComp(&BytesRemaining, &CurrentConfigLoc, EndpointSearcher) ==
 246:LUFA-111009/LUFA/Drivers/USB/Core/ConfigDescriptor.h **** 			 *      Descriptor_Search_Comp_Found)
 247:LUFA-111009/LUFA/Drivers/USB/Core/ConfigDescriptor.h **** 			 *  {
 248:LUFA-111009/LUFA/Drivers/USB/Core/ConfigDescriptor.h **** 			 *      // Do something with the endpoint descriptor
 249:LUFA-111009/LUFA/Drivers/USB/Core/ConfigDescriptor.h **** 			 *  }
 250:LUFA-111009/LUFA/Drivers/USB/Core/ConfigDescriptor.h **** 			 *  \endcode
 251:LUFA-111009/LUFA/Drivers/USB/Core/ConfigDescriptor.h **** 			 */
 252:LUFA-111009/LUFA/Drivers/USB/Core/ConfigDescriptor.h **** 			uint8_t USB_GetNextDescriptorComp(uint16_t* const BytesRem,
 253:LUFA-111009/LUFA/Drivers/USB/Core/ConfigDescriptor.h **** 			                                  void** const CurrConfigLoc,
 254:LUFA-111009/LUFA/Drivers/USB/Core/ConfigDescriptor.h **** 			                                  ConfigComparatorPtr_t const ComparatorRoutine);
 255:LUFA-111009/LUFA/Drivers/USB/Core/ConfigDescriptor.h **** 
 256:LUFA-111009/LUFA/Drivers/USB/Core/ConfigDescriptor.h **** 		/* Inline Functions: */
 257:LUFA-111009/LUFA/Drivers/USB/Core/ConfigDescriptor.h **** 			/** Skips over the current sub-descriptor inside the configuration descriptor, so that the point
 258:LUFA-111009/LUFA/Drivers/USB/Core/ConfigDescriptor.h **** 			    points to the next sub-descriptor. The bytes remaining value is automatically decremented.
 259:LUFA-111009/LUFA/Drivers/USB/Core/ConfigDescriptor.h **** 			 *
 260:LUFA-111009/LUFA/Drivers/USB/Core/ConfigDescriptor.h **** 			 * \param[in,out] BytesRem       Pointer to the number of bytes remaining of the configuration d
 261:LUFA-111009/LUFA/Drivers/USB/Core/ConfigDescriptor.h **** 			 * \param[in,out] CurrConfigLoc  Pointer to the current descriptor inside the configuration desc
 262:LUFA-111009/LUFA/Drivers/USB/Core/ConfigDescriptor.h **** 			 */
 263:LUFA-111009/LUFA/Drivers/USB/Core/ConfigDescriptor.h **** 			static inline void USB_GetNextDescriptor(uint16_t* const BytesRem,
 264:LUFA-111009/LUFA/Drivers/USB/Core/ConfigDescriptor.h **** 			                                         void** CurrConfigLoc) ATTR_NON_NULL_PTR_ARG(1) ATTR_NON
 265:LUFA-111009/LUFA/Drivers/USB/Core/ConfigDescriptor.h **** 			static inline void USB_GetNextDescriptor(uint16_t* const BytesRem,
 266:LUFA-111009/LUFA/Drivers/USB/Core/ConfigDescriptor.h **** 			                                         void** CurrConfigLoc)
 267:LUFA-111009/LUFA/Drivers/USB/Core/ConfigDescriptor.h **** 			{
  15               		.loc 1 267 0
  16               		.cfi_startproc
  17               	.LVL0:
  18 0000 CF93      		push r28
  19               	.LCFI0:
  20               		.cfi_def_cfa_offset 3
  21               		.cfi_offset 28, -2
  22 0002 DF93      		push r29
  23               	.LCFI1:
  24               		.cfi_def_cfa_offset 4
  25               		.cfi_offset 29, -3
  26               	/* prologue: function */
  27               	/* frame size = 0 */
  28               	/* stack size = 2 */
  29               	.L__stack_usage = 2
  30 0004 DC01      		movw r26,r24
 268:LUFA-111009/LUFA/Drivers/USB/Core/ConfigDescriptor.h **** 				uint16_t CurrDescriptorSize = DESCRIPTOR_CAST(*CurrConfigLoc, USB_Descriptor_Header_t).Size;
  31               		.loc 1 268 0
  32 0006 EB01      		movw r28,r22
  33 0008 E881      		ld r30,Y
  34 000a F981      		ldd r31,Y+1
  35 000c 4081      		ld r20,Z
  36 000e 50E0      		ldi r21,0
  37               	.LVL1:
  38 0010 2D91      		ld r18,X+
  39 0012 3C91      		ld r19,X
  40 0014 1197      		sbiw r26,1
  41 0016 4217      		cp r20,r18
  42 0018 5307      		cpc r21,r19
  43 001a 00F4      		brsh .L2
  44 001c 9A01      		movw r18,r20
  45               	.L2:
  46               	.LVL2:
 269:LUFA-111009/LUFA/Drivers/USB/Core/ConfigDescriptor.h **** 				
 270:LUFA-111009/LUFA/Drivers/USB/Core/ConfigDescriptor.h **** 				if (*BytesRem < CurrDescriptorSize)
 271:LUFA-111009/LUFA/Drivers/USB/Core/ConfigDescriptor.h **** 				  CurrDescriptorSize = *BytesRem;
 272:LUFA-111009/LUFA/Drivers/USB/Core/ConfigDescriptor.h **** 
 273:LUFA-111009/LUFA/Drivers/USB/Core/ConfigDescriptor.h **** 				*CurrConfigLoc  = (void*)((uintptr_t)*CurrConfigLoc + CurrDescriptorSize);
  47               		.loc 1 273 0
  48 001e E20F      		add r30,r18
  49 0020 F31F      		adc r31,r19
  50 0022 EB01      		movw r28,r22
  51 0024 F983      		std Y+1,r31
  52 0026 E883      		st Y,r30
 274:LUFA-111009/LUFA/Drivers/USB/Core/ConfigDescriptor.h **** 				*BytesRem      -= CurrDescriptorSize;
  53               		.loc 1 274 0
  54 0028 8D91      		ld r24,X+
  55 002a 9C91      		ld r25,X
  56 002c 1197      		sbiw r26,1
  57               	.LVL3:
  58 002e 821B      		sub r24,r18
  59 0030 930B      		sbc r25,r19
  60 0032 8D93      		st X+,r24
  61 0034 9C93      		st X,r25
  62               	/* epilogue start */
 275:LUFA-111009/LUFA/Drivers/USB/Core/ConfigDescriptor.h **** 			}
  63               		.loc 1 275 0
  64 0036 DF91      		pop r29
  65 0038 CF91      		pop r28
  66 003a 0895      		ret
  67               		.cfi_endproc
  68               	.LFE81:
  70               		.section	.text.USB_GetNextDescriptorOfType,"ax",@progbits
  71               	.global	USB_GetNextDescriptorOfType
  73               	USB_GetNextDescriptorOfType:
  74               	.LFB82:
  75               		.file 2 "LUFA-111009/LUFA/Drivers/USB/Core/ConfigDescriptor.c"
   1:LUFA-111009/LUFA/Drivers/USB/Core/ConfigDescriptor.c **** /*
   2:LUFA-111009/LUFA/Drivers/USB/Core/ConfigDescriptor.c ****              LUFA Library
   3:LUFA-111009/LUFA/Drivers/USB/Core/ConfigDescriptor.c ****      Copyright (C) Dean Camera, 2011.
   4:LUFA-111009/LUFA/Drivers/USB/Core/ConfigDescriptor.c **** 
   5:LUFA-111009/LUFA/Drivers/USB/Core/ConfigDescriptor.c ****   dean [at] fourwalledcubicle [dot] com
   6:LUFA-111009/LUFA/Drivers/USB/Core/ConfigDescriptor.c ****            www.lufa-lib.org
   7:LUFA-111009/LUFA/Drivers/USB/Core/ConfigDescriptor.c **** */
   8:LUFA-111009/LUFA/Drivers/USB/Core/ConfigDescriptor.c **** 
   9:LUFA-111009/LUFA/Drivers/USB/Core/ConfigDescriptor.c **** /*
  10:LUFA-111009/LUFA/Drivers/USB/Core/ConfigDescriptor.c ****   Copyright 2011  Dean Camera (dean [at] fourwalledcubicle [dot] com)
  11:LUFA-111009/LUFA/Drivers/USB/Core/ConfigDescriptor.c **** 
  12:LUFA-111009/LUFA/Drivers/USB/Core/ConfigDescriptor.c ****   Permission to use, copy, modify, distribute, and sell this
  13:LUFA-111009/LUFA/Drivers/USB/Core/ConfigDescriptor.c ****   software and its documentation for any purpose is hereby granted
  14:LUFA-111009/LUFA/Drivers/USB/Core/ConfigDescriptor.c ****   without fee, provided that the above copyright notice appear in
  15:LUFA-111009/LUFA/Drivers/USB/Core/ConfigDescriptor.c ****   all copies and that both that the copyright notice and this
  16:LUFA-111009/LUFA/Drivers/USB/Core/ConfigDescriptor.c ****   permission notice and warranty disclaimer appear in supporting
  17:LUFA-111009/LUFA/Drivers/USB/Core/ConfigDescriptor.c ****   documentation, and that the name of the author not be used in
  18:LUFA-111009/LUFA/Drivers/USB/Core/ConfigDescriptor.c ****   advertising or publicity pertaining to distribution of the
  19:LUFA-111009/LUFA/Drivers/USB/Core/ConfigDescriptor.c ****   software without specific, written prior permission.
  20:LUFA-111009/LUFA/Drivers/USB/Core/ConfigDescriptor.c **** 
  21:LUFA-111009/LUFA/Drivers/USB/Core/ConfigDescriptor.c ****   The author disclaim all warranties with regard to this
  22:LUFA-111009/LUFA/Drivers/USB/Core/ConfigDescriptor.c ****   software, including all implied warranties of merchantability
  23:LUFA-111009/LUFA/Drivers/USB/Core/ConfigDescriptor.c ****   and fitness.  In no event shall the author be liable for any
  24:LUFA-111009/LUFA/Drivers/USB/Core/ConfigDescriptor.c ****   special, indirect or consequential damages or any damages
  25:LUFA-111009/LUFA/Drivers/USB/Core/ConfigDescriptor.c ****   whatsoever resulting from loss of use, data or profits, whether
  26:LUFA-111009/LUFA/Drivers/USB/Core/ConfigDescriptor.c ****   in an action of contract, negligence or other tortious action,
  27:LUFA-111009/LUFA/Drivers/USB/Core/ConfigDescriptor.c ****   arising out of or in connection with the use or performance of
  28:LUFA-111009/LUFA/Drivers/USB/Core/ConfigDescriptor.c ****   this software.
  29:LUFA-111009/LUFA/Drivers/USB/Core/ConfigDescriptor.c **** */
  30:LUFA-111009/LUFA/Drivers/USB/Core/ConfigDescriptor.c **** 
  31:LUFA-111009/LUFA/Drivers/USB/Core/ConfigDescriptor.c **** #define  __INCLUDE_FROM_USB_DRIVER
  32:LUFA-111009/LUFA/Drivers/USB/Core/ConfigDescriptor.c **** #include "ConfigDescriptor.h"
  33:LUFA-111009/LUFA/Drivers/USB/Core/ConfigDescriptor.c **** 
  34:LUFA-111009/LUFA/Drivers/USB/Core/ConfigDescriptor.c **** #if defined(USB_CAN_BE_HOST)
  35:LUFA-111009/LUFA/Drivers/USB/Core/ConfigDescriptor.c **** uint8_t USB_Host_GetDeviceConfigDescriptor(const uint8_t ConfigNumber,
  36:LUFA-111009/LUFA/Drivers/USB/Core/ConfigDescriptor.c ****                                            uint16_t* const ConfigSizePtr,
  37:LUFA-111009/LUFA/Drivers/USB/Core/ConfigDescriptor.c ****                                            void* const BufferPtr,
  38:LUFA-111009/LUFA/Drivers/USB/Core/ConfigDescriptor.c ****                                            const uint16_t BufferSize)
  39:LUFA-111009/LUFA/Drivers/USB/Core/ConfigDescriptor.c **** {
  40:LUFA-111009/LUFA/Drivers/USB/Core/ConfigDescriptor.c **** 	uint8_t ErrorCode;
  41:LUFA-111009/LUFA/Drivers/USB/Core/ConfigDescriptor.c **** 	uint8_t ConfigHeader[sizeof(USB_Descriptor_Configuration_Header_t)];
  42:LUFA-111009/LUFA/Drivers/USB/Core/ConfigDescriptor.c **** 
  43:LUFA-111009/LUFA/Drivers/USB/Core/ConfigDescriptor.c **** 	USB_ControlRequest = (USB_Request_Header_t)
  44:LUFA-111009/LUFA/Drivers/USB/Core/ConfigDescriptor.c **** 		{
  45:LUFA-111009/LUFA/Drivers/USB/Core/ConfigDescriptor.c **** 			.bmRequestType = (REQDIR_DEVICETOHOST | REQTYPE_STANDARD | REQREC_DEVICE),
  46:LUFA-111009/LUFA/Drivers/USB/Core/ConfigDescriptor.c **** 			.bRequest      = REQ_GetDescriptor,
  47:LUFA-111009/LUFA/Drivers/USB/Core/ConfigDescriptor.c **** 			.wValue        = ((DTYPE_Configuration << 8) | (ConfigNumber - 1)),
  48:LUFA-111009/LUFA/Drivers/USB/Core/ConfigDescriptor.c **** 			.wIndex        = 0,
  49:LUFA-111009/LUFA/Drivers/USB/Core/ConfigDescriptor.c **** 			.wLength       = sizeof(USB_Descriptor_Configuration_Header_t),
  50:LUFA-111009/LUFA/Drivers/USB/Core/ConfigDescriptor.c **** 		};
  51:LUFA-111009/LUFA/Drivers/USB/Core/ConfigDescriptor.c **** 
  52:LUFA-111009/LUFA/Drivers/USB/Core/ConfigDescriptor.c **** 	Pipe_SelectPipe(PIPE_CONTROLPIPE);
  53:LUFA-111009/LUFA/Drivers/USB/Core/ConfigDescriptor.c **** 
  54:LUFA-111009/LUFA/Drivers/USB/Core/ConfigDescriptor.c **** 	if ((ErrorCode = USB_Host_SendControlRequest(ConfigHeader)) != HOST_SENDCONTROL_Successful)
  55:LUFA-111009/LUFA/Drivers/USB/Core/ConfigDescriptor.c **** 	  return ErrorCode;
  56:LUFA-111009/LUFA/Drivers/USB/Core/ConfigDescriptor.c **** 
  57:LUFA-111009/LUFA/Drivers/USB/Core/ConfigDescriptor.c **** 	*ConfigSizePtr = le16_to_cpu(DESCRIPTOR_PCAST(ConfigHeader, USB_Descriptor_Configuration_Header_t)
  58:LUFA-111009/LUFA/Drivers/USB/Core/ConfigDescriptor.c **** 
  59:LUFA-111009/LUFA/Drivers/USB/Core/ConfigDescriptor.c **** 	if (*ConfigSizePtr > BufferSize)
  60:LUFA-111009/LUFA/Drivers/USB/Core/ConfigDescriptor.c **** 	  return HOST_GETCONFIG_BuffOverflow;
  61:LUFA-111009/LUFA/Drivers/USB/Core/ConfigDescriptor.c **** 
  62:LUFA-111009/LUFA/Drivers/USB/Core/ConfigDescriptor.c **** 	USB_ControlRequest.wLength = *ConfigSizePtr;
  63:LUFA-111009/LUFA/Drivers/USB/Core/ConfigDescriptor.c **** 
  64:LUFA-111009/LUFA/Drivers/USB/Core/ConfigDescriptor.c **** 	if ((ErrorCode = USB_Host_SendControlRequest(BufferPtr)) != HOST_SENDCONTROL_Successful)
  65:LUFA-111009/LUFA/Drivers/USB/Core/ConfigDescriptor.c **** 	  return ErrorCode;
  66:LUFA-111009/LUFA/Drivers/USB/Core/ConfigDescriptor.c **** 
  67:LUFA-111009/LUFA/Drivers/USB/Core/ConfigDescriptor.c **** 	if (DESCRIPTOR_TYPE(BufferPtr) != DTYPE_Configuration)
  68:LUFA-111009/LUFA/Drivers/USB/Core/ConfigDescriptor.c **** 	  return HOST_GETCONFIG_InvalidData;
  69:LUFA-111009/LUFA/Drivers/USB/Core/ConfigDescriptor.c **** 
  70:LUFA-111009/LUFA/Drivers/USB/Core/ConfigDescriptor.c **** 	return HOST_GETCONFIG_Successful;
  71:LUFA-111009/LUFA/Drivers/USB/Core/ConfigDescriptor.c **** }
  72:LUFA-111009/LUFA/Drivers/USB/Core/ConfigDescriptor.c **** #endif
  73:LUFA-111009/LUFA/Drivers/USB/Core/ConfigDescriptor.c **** 
  74:LUFA-111009/LUFA/Drivers/USB/Core/ConfigDescriptor.c **** void USB_GetNextDescriptorOfType(uint16_t* const BytesRem,
  75:LUFA-111009/LUFA/Drivers/USB/Core/ConfigDescriptor.c ****                                  void** const CurrConfigLoc,
  76:LUFA-111009/LUFA/Drivers/USB/Core/ConfigDescriptor.c ****                                  const uint8_t Type)
  77:LUFA-111009/LUFA/Drivers/USB/Core/ConfigDescriptor.c **** {
  76               		.loc 2 77 0
  77               		.cfi_startproc
  78               	.LVL4:
  79 0000 FF92      		push r15
  80               	.LCFI2:
  81               		.cfi_def_cfa_offset 3
  82               		.cfi_offset 15, -2
  83 0002 0F93      		push r16
  84               	.LCFI3:
  85               		.cfi_def_cfa_offset 4
  86               		.cfi_offset 16, -3
  87 0004 1F93      		push r17
  88               	.LCFI4:
  89               		.cfi_def_cfa_offset 5
  90               		.cfi_offset 17, -4
  91 0006 CF93      		push r28
  92               	.LCFI5:
  93               		.cfi_def_cfa_offset 6
  94               		.cfi_offset 28, -5
  95 0008 DF93      		push r29
  96               	.LCFI6:
  97               		.cfi_def_cfa_offset 7
  98               		.cfi_offset 29, -6
  99               	/* prologue: function */
 100               	/* frame size = 0 */
 101               	/* stack size = 5 */
 102               	.L__stack_usage = 5
 103 000a EC01      		movw r28,r24
 104 000c 8B01      		movw r16,r22
 105 000e F42E      		mov r15,r20
 106               	.LVL5:
 107               	.L4:
  78:LUFA-111009/LUFA/Drivers/USB/Core/ConfigDescriptor.c **** 	while (*BytesRem)
 108               		.loc 2 78 0
 109 0010 8881      		ld r24,Y
 110 0012 9981      		ldd r25,Y+1
 111 0014 892B      		or r24,r25
 112 0016 01F0      		breq .L3
  79:LUFA-111009/LUFA/Drivers/USB/Core/ConfigDescriptor.c **** 	{
  80:LUFA-111009/LUFA/Drivers/USB/Core/ConfigDescriptor.c **** 		USB_GetNextDescriptor(BytesRem, CurrConfigLoc);
 113               		.loc 2 80 0
 114 0018 B801      		movw r22,r16
 115 001a CE01      		movw r24,r28
 116 001c 0E94 0000 		call USB_GetNextDescriptor
 117               	.LVL6:
  81:LUFA-111009/LUFA/Drivers/USB/Core/ConfigDescriptor.c **** 
  82:LUFA-111009/LUFA/Drivers/USB/Core/ConfigDescriptor.c **** 		if (DESCRIPTOR_TYPE(*CurrConfigLoc) == Type)
 118               		.loc 2 82 0
 119 0020 D801      		movw r26,r16
 120 0022 ED91      		ld r30,X+
 121 0024 FC91      		ld r31,X
 122 0026 8181      		ldd r24,Z+1
 123 0028 8F11      		cpse r24,r15
 124 002a 00C0      		rjmp .L4
 125               	.L3:
 126               	/* epilogue start */
  83:LUFA-111009/LUFA/Drivers/USB/Core/ConfigDescriptor.c **** 		  return;
  84:LUFA-111009/LUFA/Drivers/USB/Core/ConfigDescriptor.c **** 	}
  85:LUFA-111009/LUFA/Drivers/USB/Core/ConfigDescriptor.c **** }
 127               		.loc 2 85 0
 128 002c DF91      		pop r29
 129 002e CF91      		pop r28
 130               	.LVL7:
 131 0030 1F91      		pop r17
 132 0032 0F91      		pop r16
 133               	.LVL8:
 134 0034 FF90      		pop r15
 135               	.LVL9:
 136 0036 0895      		ret
 137               		.cfi_endproc
 138               	.LFE82:
 140               		.section	.text.USB_GetNextDescriptorOfTypeBefore,"ax",@progbits
 141               	.global	USB_GetNextDescriptorOfTypeBefore
 143               	USB_GetNextDescriptorOfTypeBefore:
 144               	.LFB83:
  86:LUFA-111009/LUFA/Drivers/USB/Core/ConfigDescriptor.c **** 
  87:LUFA-111009/LUFA/Drivers/USB/Core/ConfigDescriptor.c **** void USB_GetNextDescriptorOfTypeBefore(uint16_t* const BytesRem,
  88:LUFA-111009/LUFA/Drivers/USB/Core/ConfigDescriptor.c ****                                        void** const CurrConfigLoc,
  89:LUFA-111009/LUFA/Drivers/USB/Core/ConfigDescriptor.c ****                                        const uint8_t Type,
  90:LUFA-111009/LUFA/Drivers/USB/Core/ConfigDescriptor.c ****                                        const uint8_t BeforeType)
  91:LUFA-111009/LUFA/Drivers/USB/Core/ConfigDescriptor.c **** {
 145               		.loc 2 91 0
 146               		.cfi_startproc
 147               	.LVL10:
 148 0000 EF92      		push r14
 149               	.LCFI7:
 150               		.cfi_def_cfa_offset 3
 151               		.cfi_offset 14, -2
 152 0002 FF92      		push r15
 153               	.LCFI8:
 154               		.cfi_def_cfa_offset 4
 155               		.cfi_offset 15, -3
 156 0004 0F93      		push r16
 157               	.LCFI9:
 158               		.cfi_def_cfa_offset 5
 159               		.cfi_offset 16, -4
 160 0006 1F93      		push r17
 161               	.LCFI10:
 162               		.cfi_def_cfa_offset 6
 163               		.cfi_offset 17, -5
 164 0008 CF93      		push r28
 165               	.LCFI11:
 166               		.cfi_def_cfa_offset 7
 167               		.cfi_offset 28, -6
 168 000a DF93      		push r29
 169               	.LCFI12:
 170               		.cfi_def_cfa_offset 8
 171               		.cfi_offset 29, -7
 172               	/* prologue: function */
 173               	/* frame size = 0 */
 174               	/* stack size = 6 */
 175               	.L__stack_usage = 6
 176 000c EC01      		movw r28,r24
 177 000e 8B01      		movw r16,r22
 178 0010 F42E      		mov r15,r20
 179 0012 E22E      		mov r14,r18
 180               	.LVL11:
 181               	.L9:
  92:LUFA-111009/LUFA/Drivers/USB/Core/ConfigDescriptor.c **** 	while (*BytesRem)
 182               		.loc 2 92 0
 183 0014 8881      		ld r24,Y
 184 0016 9981      		ldd r25,Y+1
 185 0018 892B      		or r24,r25
 186 001a 01F0      		breq .L8
  93:LUFA-111009/LUFA/Drivers/USB/Core/ConfigDescriptor.c **** 	{
  94:LUFA-111009/LUFA/Drivers/USB/Core/ConfigDescriptor.c **** 		USB_GetNextDescriptor(BytesRem, CurrConfigLoc);
 187               		.loc 2 94 0
 188 001c B801      		movw r22,r16
 189 001e CE01      		movw r24,r28
 190 0020 0E94 0000 		call USB_GetNextDescriptor
 191               	.LVL12:
  95:LUFA-111009/LUFA/Drivers/USB/Core/ConfigDescriptor.c **** 
  96:LUFA-111009/LUFA/Drivers/USB/Core/ConfigDescriptor.c **** 		if (DESCRIPTOR_TYPE(*CurrConfigLoc) == Type)
 192               		.loc 2 96 0
 193 0024 D801      		movw r26,r16
 194 0026 ED91      		ld r30,X+
 195 0028 FC91      		ld r31,X
 196 002a 8181      		ldd r24,Z+1
 197 002c 8F15      		cp r24,r15
 198 002e 01F0      		breq .L8
  97:LUFA-111009/LUFA/Drivers/USB/Core/ConfigDescriptor.c **** 		{
  98:LUFA-111009/LUFA/Drivers/USB/Core/ConfigDescriptor.c **** 			return;
  99:LUFA-111009/LUFA/Drivers/USB/Core/ConfigDescriptor.c **** 		}
 100:LUFA-111009/LUFA/Drivers/USB/Core/ConfigDescriptor.c **** 		else if (DESCRIPTOR_TYPE(*CurrConfigLoc) == BeforeType)
 199               		.loc 2 100 0
 200 0030 8E11      		cpse r24,r14
 201 0032 00C0      		rjmp .L9
 101:LUFA-111009/LUFA/Drivers/USB/Core/ConfigDescriptor.c **** 		{
 102:LUFA-111009/LUFA/Drivers/USB/Core/ConfigDescriptor.c **** 			*BytesRem = 0;
 202               		.loc 2 102 0
 203 0034 1982      		std Y+1,__zero_reg__
 204 0036 1882      		st Y,__zero_reg__
 205               	.L8:
 206               	/* epilogue start */
 103:LUFA-111009/LUFA/Drivers/USB/Core/ConfigDescriptor.c **** 			return;
 104:LUFA-111009/LUFA/Drivers/USB/Core/ConfigDescriptor.c **** 		}
 105:LUFA-111009/LUFA/Drivers/USB/Core/ConfigDescriptor.c **** 	}
 106:LUFA-111009/LUFA/Drivers/USB/Core/ConfigDescriptor.c **** }
 207               		.loc 2 106 0
 208 0038 DF91      		pop r29
 209 003a CF91      		pop r28
 210               	.LVL13:
 211 003c 1F91      		pop r17
 212 003e 0F91      		pop r16
 213               	.LVL14:
 214 0040 FF90      		pop r15
 215               	.LVL15:
 216 0042 EF90      		pop r14
 217               	.LVL16:
 218 0044 0895      		ret
 219               		.cfi_endproc
 220               	.LFE83:
 222               		.section	.text.USB_GetNextDescriptorOfTypeAfter,"ax",@progbits
 223               	.global	USB_GetNextDescriptorOfTypeAfter
 225               	USB_GetNextDescriptorOfTypeAfter:
 226               	.LFB84:
 107:LUFA-111009/LUFA/Drivers/USB/Core/ConfigDescriptor.c **** 
 108:LUFA-111009/LUFA/Drivers/USB/Core/ConfigDescriptor.c **** void USB_GetNextDescriptorOfTypeAfter(uint16_t* const BytesRem,
 109:LUFA-111009/LUFA/Drivers/USB/Core/ConfigDescriptor.c ****                                       void** const CurrConfigLoc,
 110:LUFA-111009/LUFA/Drivers/USB/Core/ConfigDescriptor.c ****                                       const uint8_t Type,
 111:LUFA-111009/LUFA/Drivers/USB/Core/ConfigDescriptor.c ****                                       const uint8_t AfterType)
 112:LUFA-111009/LUFA/Drivers/USB/Core/ConfigDescriptor.c **** {
 227               		.loc 2 112 0
 228               		.cfi_startproc
 229               	.LVL17:
 230 0000 FF92      		push r15
 231               	.LCFI13:
 232               		.cfi_def_cfa_offset 3
 233               		.cfi_offset 15, -2
 234 0002 0F93      		push r16
 235               	.LCFI14:
 236               		.cfi_def_cfa_offset 4
 237               		.cfi_offset 16, -3
 238 0004 1F93      		push r17
 239               	.LCFI15:
 240               		.cfi_def_cfa_offset 5
 241               		.cfi_offset 17, -4
 242 0006 CF93      		push r28
 243               	.LCFI16:
 244               		.cfi_def_cfa_offset 6
 245               		.cfi_offset 28, -5
 246 0008 DF93      		push r29
 247               	.LCFI17:
 248               		.cfi_def_cfa_offset 7
 249               		.cfi_offset 29, -6
 250               	/* prologue: function */
 251               	/* frame size = 0 */
 252               	/* stack size = 5 */
 253               	.L__stack_usage = 5
 254 000a EC01      		movw r28,r24
 255 000c 8B01      		movw r16,r22
 256 000e F42E      		mov r15,r20
 113:LUFA-111009/LUFA/Drivers/USB/Core/ConfigDescriptor.c **** 	USB_GetNextDescriptorOfType(BytesRem, CurrConfigLoc, AfterType);
 257               		.loc 2 113 0
 258 0010 422F      		mov r20,r18
 259               	.LVL18:
 260 0012 0E94 0000 		call USB_GetNextDescriptorOfType
 261               	.LVL19:
 114:LUFA-111009/LUFA/Drivers/USB/Core/ConfigDescriptor.c **** 
 115:LUFA-111009/LUFA/Drivers/USB/Core/ConfigDescriptor.c **** 	if (*BytesRem)
 262               		.loc 2 115 0
 263 0016 8881      		ld r24,Y
 264 0018 9981      		ldd r25,Y+1
 265 001a 892B      		or r24,r25
 266 001c 01F0      		breq .L15
 116:LUFA-111009/LUFA/Drivers/USB/Core/ConfigDescriptor.c **** 	  USB_GetNextDescriptorOfType(BytesRem, CurrConfigLoc, Type);
 267               		.loc 2 116 0
 268 001e 4F2D      		mov r20,r15
 269 0020 B801      		movw r22,r16
 270 0022 CE01      		movw r24,r28
 271               	/* epilogue start */
 117:LUFA-111009/LUFA/Drivers/USB/Core/ConfigDescriptor.c **** }
 272               		.loc 2 117 0
 273 0024 DF91      		pop r29
 274 0026 CF91      		pop r28
 275               	.LVL20:
 276 0028 1F91      		pop r17
 277 002a 0F91      		pop r16
 278               	.LVL21:
 279 002c FF90      		pop r15
 280               	.LVL22:
 116:LUFA-111009/LUFA/Drivers/USB/Core/ConfigDescriptor.c **** 	  USB_GetNextDescriptorOfType(BytesRem, CurrConfigLoc, Type);
 281               		.loc 2 116 0
 282 002e 0C94 0000 		jmp USB_GetNextDescriptorOfType
 283               	.LVL23:
 284               	.L15:
 285               	/* epilogue start */
 286               		.loc 2 117 0
 287 0032 DF91      		pop r29
 288 0034 CF91      		pop r28
 289               	.LVL24:
 290 0036 1F91      		pop r17
 291 0038 0F91      		pop r16
 292               	.LVL25:
 293 003a FF90      		pop r15
 294               	.LVL26:
 295 003c 0895      		ret
 296               		.cfi_endproc
 297               	.LFE84:
 299               		.section	.text.USB_GetNextDescriptorComp,"ax",@progbits
 300               	.global	USB_GetNextDescriptorComp
 302               	USB_GetNextDescriptorComp:
 303               	.LFB85:
 118:LUFA-111009/LUFA/Drivers/USB/Core/ConfigDescriptor.c **** 
 119:LUFA-111009/LUFA/Drivers/USB/Core/ConfigDescriptor.c **** uint8_t USB_GetNextDescriptorComp(uint16_t* const BytesRem,
 120:LUFA-111009/LUFA/Drivers/USB/Core/ConfigDescriptor.c ****                                   void** const CurrConfigLoc,
 121:LUFA-111009/LUFA/Drivers/USB/Core/ConfigDescriptor.c ****                                   ConfigComparatorPtr_t const ComparatorRoutine)
 122:LUFA-111009/LUFA/Drivers/USB/Core/ConfigDescriptor.c **** {
 304               		.loc 2 122 0
 305               		.cfi_startproc
 306               	.LVL27:
 307 0000 AF92      		push r10
 308               	.LCFI18:
 309               		.cfi_def_cfa_offset 3
 310               		.cfi_offset 10, -2
 311 0002 BF92      		push r11
 312               	.LCFI19:
 313               		.cfi_def_cfa_offset 4
 314               		.cfi_offset 11, -3
 315 0004 CF92      		push r12
 316               	.LCFI20:
 317               		.cfi_def_cfa_offset 5
 318               		.cfi_offset 12, -4
 319 0006 DF92      		push r13
 320               	.LCFI21:
 321               		.cfi_def_cfa_offset 6
 322               		.cfi_offset 13, -5
 323 0008 EF92      		push r14
 324               	.LCFI22:
 325               		.cfi_def_cfa_offset 7
 326               		.cfi_offset 14, -6
 327 000a FF92      		push r15
 328               	.LCFI23:
 329               		.cfi_def_cfa_offset 8
 330               		.cfi_offset 15, -7
 331 000c 0F93      		push r16
 332               	.LCFI24:
 333               		.cfi_def_cfa_offset 9
 334               		.cfi_offset 16, -8
 335 000e 1F93      		push r17
 336               	.LCFI25:
 337               		.cfi_def_cfa_offset 10
 338               		.cfi_offset 17, -9
 339 0010 CF93      		push r28
 340               	.LCFI26:
 341               		.cfi_def_cfa_offset 11
 342               		.cfi_offset 28, -10
 343 0012 DF93      		push r29
 344               	.LCFI27:
 345               		.cfi_def_cfa_offset 12
 346               		.cfi_offset 29, -11
 347               	/* prologue: function */
 348               	/* frame size = 0 */
 349               	/* stack size = 10 */
 350               	.L__stack_usage = 10
 351 0014 8C01      		movw r16,r24
 352 0016 EB01      		movw r28,r22
 353 0018 6A01      		movw r12,r20
 354               	.LVL28:
 355               	.L18:
 123:LUFA-111009/LUFA/Drivers/USB/Core/ConfigDescriptor.c **** 	uint8_t ErrorCode;
 124:LUFA-111009/LUFA/Drivers/USB/Core/ConfigDescriptor.c **** 
 125:LUFA-111009/LUFA/Drivers/USB/Core/ConfigDescriptor.c **** 	while (*BytesRem)
 356               		.loc 2 125 0
 357 001a F801      		movw r30,r16
 358 001c E080      		ld r14,Z
 359 001e F180      		ldd r15,Z+1
 360 0020 E114      		cp r14,__zero_reg__
 361 0022 F104      		cpc r15,__zero_reg__
 362 0024 01F4      		brne .L20
 126:LUFA-111009/LUFA/Drivers/USB/Core/ConfigDescriptor.c **** 	{
 127:LUFA-111009/LUFA/Drivers/USB/Core/ConfigDescriptor.c **** 		uint8_t* PrevDescLoc  = *CurrConfigLoc;
 128:LUFA-111009/LUFA/Drivers/USB/Core/ConfigDescriptor.c **** 		uint16_t PrevBytesRem = *BytesRem;
 129:LUFA-111009/LUFA/Drivers/USB/Core/ConfigDescriptor.c **** 
 130:LUFA-111009/LUFA/Drivers/USB/Core/ConfigDescriptor.c **** 		USB_GetNextDescriptor(BytesRem, CurrConfigLoc);
 131:LUFA-111009/LUFA/Drivers/USB/Core/ConfigDescriptor.c **** 
 132:LUFA-111009/LUFA/Drivers/USB/Core/ConfigDescriptor.c **** 		if ((ErrorCode = ComparatorRoutine(*CurrConfigLoc)) != DESCRIPTOR_SEARCH_NotFound)
 133:LUFA-111009/LUFA/Drivers/USB/Core/ConfigDescriptor.c **** 		{
 134:LUFA-111009/LUFA/Drivers/USB/Core/ConfigDescriptor.c **** 			if (ErrorCode == DESCRIPTOR_SEARCH_Fail)
 135:LUFA-111009/LUFA/Drivers/USB/Core/ConfigDescriptor.c **** 			{
 136:LUFA-111009/LUFA/Drivers/USB/Core/ConfigDescriptor.c **** 				*CurrConfigLoc = PrevDescLoc;
 137:LUFA-111009/LUFA/Drivers/USB/Core/ConfigDescriptor.c **** 				*BytesRem      = PrevBytesRem;
 138:LUFA-111009/LUFA/Drivers/USB/Core/ConfigDescriptor.c **** 			}
 139:LUFA-111009/LUFA/Drivers/USB/Core/ConfigDescriptor.c **** 
 140:LUFA-111009/LUFA/Drivers/USB/Core/ConfigDescriptor.c **** 			return ErrorCode;
 141:LUFA-111009/LUFA/Drivers/USB/Core/ConfigDescriptor.c **** 		}
 142:LUFA-111009/LUFA/Drivers/USB/Core/ConfigDescriptor.c **** 	}
 143:LUFA-111009/LUFA/Drivers/USB/Core/ConfigDescriptor.c **** 
 144:LUFA-111009/LUFA/Drivers/USB/Core/ConfigDescriptor.c **** 	return DESCRIPTOR_SEARCH_COMP_EndOfDescriptor;
 363               		.loc 2 144 0
 364 0026 82E0      		ldi r24,lo8(2)
 365 0028 00C0      		rjmp .L17
 366               	.L20:
 367               	.LBB2:
 127:LUFA-111009/LUFA/Drivers/USB/Core/ConfigDescriptor.c **** 		uint16_t PrevBytesRem = *BytesRem;
 368               		.loc 2 127 0
 369 002a A880      		ld r10,Y
 370 002c B980      		ldd r11,Y+1
 371               	.LVL29:
 130:LUFA-111009/LUFA/Drivers/USB/Core/ConfigDescriptor.c **** 
 372               		.loc 2 130 0
 373 002e BE01      		movw r22,r28
 374 0030 C801      		movw r24,r16
 375 0032 0E94 0000 		call USB_GetNextDescriptor
 376               	.LVL30:
 132:LUFA-111009/LUFA/Drivers/USB/Core/ConfigDescriptor.c **** 		{
 377               		.loc 2 132 0
 378 0036 8881      		ld r24,Y
 379 0038 9981      		ldd r25,Y+1
 380 003a F601      		movw r30,r12
 381 003c 0995      		icall
 382               	.LVL31:
 383 003e 8230      		cpi r24,lo8(2)
 384 0040 01F0      		breq .L18
 134:LUFA-111009/LUFA/Drivers/USB/Core/ConfigDescriptor.c **** 			{
 385               		.loc 2 134 0
 386 0042 8130      		cpi r24,lo8(1)
 387 0044 01F4      		brne .L17
 136:LUFA-111009/LUFA/Drivers/USB/Core/ConfigDescriptor.c **** 				*BytesRem      = PrevBytesRem;
 388               		.loc 2 136 0
 389 0046 B982      		std Y+1,r11
 390 0048 A882      		st Y,r10
 137:LUFA-111009/LUFA/Drivers/USB/Core/ConfigDescriptor.c **** 			}
 391               		.loc 2 137 0
 392 004a F801      		movw r30,r16
 393 004c F182      		std Z+1,r15
 394 004e E082      		st Z,r14
 395               	.LVL32:
 396               	.L17:
 397               	/* epilogue start */
 398               	.LBE2:
 145:LUFA-111009/LUFA/Drivers/USB/Core/ConfigDescriptor.c **** }
 399               		.loc 2 145 0
 400 0050 DF91      		pop r29
 401 0052 CF91      		pop r28
 402               	.LVL33:
 403 0054 1F91      		pop r17
 404 0056 0F91      		pop r16
 405               	.LVL34:
 406 0058 FF90      		pop r15
 407 005a EF90      		pop r14
 408 005c DF90      		pop r13
 409 005e CF90      		pop r12
 410               	.LVL35:
 411 0060 BF90      		pop r11
 412 0062 AF90      		pop r10
 413 0064 0895      		ret
 414               		.cfi_endproc
 415               	.LFE85:
 417               		.text
 418               	.Letext0:
 419               		.file 3 "/Applications/Arduino.app/Contents/Java/hardware/tools/avr/avr/include/stdint.h"
 420               		.file 4 "LUFA-111009/LUFA/Drivers/USB/Core/StdRequestType.h"
 421               		.file 5 "LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../StdDescriptors.h"
 422               		.file 6 "LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../DeviceStandardReq.h"
 423               		.file 7 "LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../USBTask.h"
 424               		.file 8 "LUFA-111009/LUFA/Drivers/USB/Core/HostStandardReq.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 ConfigDescriptor.c
/var/folders/sf/8d7_tq_52cvgs8msn7t0mfr80000gn/T//ccZ4j9xn.s:2      *ABS*:000000000000003e __SP_H__
/var/folders/sf/8d7_tq_52cvgs8msn7t0mfr80000gn/T//ccZ4j9xn.s:3      *ABS*:000000000000003d __SP_L__
/var/folders/sf/8d7_tq_52cvgs8msn7t0mfr80000gn/T//ccZ4j9xn.s:4      *ABS*:000000000000003f __SREG__
/var/folders/sf/8d7_tq_52cvgs8msn7t0mfr80000gn/T//ccZ4j9xn.s:5      *ABS*:0000000000000000 __tmp_reg__
/var/folders/sf/8d7_tq_52cvgs8msn7t0mfr80000gn/T//ccZ4j9xn.s:6      *ABS*:0000000000000001 __zero_reg__
/var/folders/sf/8d7_tq_52cvgs8msn7t0mfr80000gn/T//ccZ4j9xn.s:12     .text.USB_GetNextDescriptor:0000000000000000 USB_GetNextDescriptor
/var/folders/sf/8d7_tq_52cvgs8msn7t0mfr80000gn/T//ccZ4j9xn.s:73     .text.USB_GetNextDescriptorOfType:0000000000000000 USB_GetNextDescriptorOfType
/var/folders/sf/8d7_tq_52cvgs8msn7t0mfr80000gn/T//ccZ4j9xn.s:143    .text.USB_GetNextDescriptorOfTypeBefore:0000000000000000 USB_GetNextDescriptorOfTypeBefore
/var/folders/sf/8d7_tq_52cvgs8msn7t0mfr80000gn/T//ccZ4j9xn.s:225    .text.USB_GetNextDescriptorOfTypeAfter:0000000000000000 USB_GetNextDescriptorOfTypeAfter
/var/folders/sf/8d7_tq_52cvgs8msn7t0mfr80000gn/T//ccZ4j9xn.s:302    .text.USB_GetNextDescriptorComp:0000000000000000 USB_GetNextDescriptorComp

NO UNDEFINED SYMBOLS
